
#!/bin/sh

timestamp=$(date +%Y-%m-%d-%H%M%S)
dir="$(xdg-user-dir PICTURES)/ScreenShots"
filename="$dir/Shot-${timestamp}.png"

[ -d "$dir" ] || mkdir -p "$dir"

s_full=""
s_select=""
s_in3="󰔝"
s_all="󰍹"

rofi_cmd() {
    rofi -dmenu -p Screenshot -mesg "Directory :: $dir" -markup-rows \
         -theme "$HOME/.config/hypr/src/rofi-themes/Screenshot.rasi"
}

run_rofi() {
    printf "%s\n%s\n%s\n%s\n" "$s_full" "$s_select" "$s_in3" "$s_all" | rofi_cmd
}

show_notification() {
    if [ -e "$filename" ]; then
        dunstify -r 699 -i "$filename" "Screenshot" "Screenshot saved and copied to clipboard"
    else
        dunstify -r 699 -i dialog-error "Screenshot" "Screenshot Canceled"
    fi
}

copy_screenshot() {
    wl-copy < "$filename"
}

take_screenshot() {
    mode="$1"
    case "$mode" in
        full)
            grim "$filename"
            ;;
        select)
            region=$(slurp)
            grim -g "$region" "$filename"
            ;;
        in3)
            for sec in 3 2 1; do
                dunstify -r 345 -t 1100 -i ~/.config/hypr/src/assets/screenshot.png "Taking shot in : $sec"
                sleep 1
            done
            grim "$filename"
            ;;
        all)
            # Grim geralmente captura todos os monitores automaticamente
            grim "$filename"
            ;;
    esac

    if [ $? -eq 0 ]; then
        copy_screenshot
        show_notification
    fi
}

select_option=$(run_rofi)

case "$select_option" in
    "$s_full")
        take_screenshot full ;;
    "$s_select")
        take_screenshot select ;;
    "$s_in3")
        take_screenshot in3 ;;
    "$s_all")
        take_screenshot all ;;
esac
